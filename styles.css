:root {
  --lav: #B39CD0;
  --grey: #D9E8EE;
  --orange: #F59432;
  --blue: #34839D;
  --green: #008048;
  --bar-width: 40px;
  --bar-height: 4px;
  --bar-gap: 6px;
  --animation: 200ms ease-in-out;
  --burger-height: calc(var(--bar-height) * 3 + var(--bar-gap) * 2);
}

img {
  max-width: 100%;
}

html {
  font-size: 16px;
}

body {
  font-family: Roboto, monospace;
  background: var(--grey);
}

/* HEADER */

.burger__menu {
  display: none;
}

header {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 1rem;
  background: var(--orange);
  color: var(--grey);
  margin: 0 auto;
}


header a{
  text-decoration: none;
  color: inherit;
}

header h1 {
  font-family: Teko, sans-serif;
  font-size: 3.6rem;
  margin: 0;
}

.menu {
  display: flex;
  justify-content: space-evenly;
  gap: 2rem;
  text-align: center;
  width: 100%;
  max-width: 800px;
  list-style-type: none;
  padding: 0;
  font-size: 1rem;
}

header li:hover {
  text-decoration: underline;
}


  /* HERO SECTION  */

.hero {
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 70%;
  margin: 5rem auto;
}

.hero__title {
  font-size: 3rem;
}

.hero em {
  color: var(--orange);
}

.hero p {
  font-weight: 300;
  font-size: 2rem;
  margin: 5rem auto 0 auto;
}


.hero strong {
  color: var(--orange);
}


   /* IMAGES SECTION */

.imgs__container {
  display: grid;
  grid-template: repeat(3, 1fr) / repeat(3, 1fr);
  gap: 1px 1px;
  padding-bottom: 4rem;
}

.img__card {
  display: flex;
  flex-direction: column;
  padding: 1rem;
}

.imgs__container img {
  border-radius: 8px 8px 0 0;
}

.img__description {
  padding: 1rem;
  font-weight: 300;
  background: lightgray;
  margin: 0;
  border-radius: 0 0 8px 8px;
  flex: 1;
}



/* MEDIA QUERIES */

/* @media only screen and (min-width: 900px) {
  .hero {
    flex-direction: row;
    max-width: 80%;
    gap: 4rem;
    align-items: center;
  }

  .hero__title {
    margin: 0;
  }
  .hero p {
    margin: 0;
  }
} */

@media only screen and (max-width: 800px) {

  .imgs__container {
    grid-template: repeat(5, 1fr) / repeat(2, 1fr);
  }
}

 @media only screen and (max-width: 700px) {
  header h1 {
    font-size: 2.8rem;
  }

  .hero {
    max-width: 80%;
  }

  .hero {
    margin: 1rem auto 2rem auto;
  }

  .hero__title {
    font-size: 2.2rem;
  }
  .hero p {
    margin: 0 auto;
    font-size: 1.2rem;
  }

}

@media only screen and (max-width: 600px) {

  .hero {
    max-width: 90%;
  }
  .imgs__container {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  .img__card {
    padding: .2rem;
    
  }
}

@media only screen and (max-width: 500px) {

  header {
    flex-direction: column;
    align-items: flex-start;
    padding: 1rem;
  }
 
  .burger__menu {
    --x-width: calc(var(--burger-height) * 1.41421356237); /* calculates the length of the lines when they become a cross (multiply by the square root of 2) */
    position: absolute;
    top: 22px;
    right: 30px;  
    display: flex;
    flex-direction: column;
    gap: var(--bar-gap);
    cursor: pointer;
    padding: .5rem;
  }

  .burger__menu input, /* checkbox. middle line */
  .burger__menu::before, /* top line */
  .burger__menu::after { /* bottom line */
    content: '';
    width: var(--bar-width);
    height: var(--bar-height);
    border-radius: 18px;
    background: var(--grey);
    transition: opacity var(--animation), /* transition for opacity, width, length and rotate */
      width var(--animation), 
      rotate var(--animation),
      translate var(--animation);
    transform-origin: left ; /* the axis where the lines rotate are now on the left */
  }

  .burger__menu input {
    appearance: none; /* removes checkbox appareance and takes the above settings (widht, length) */
    pointer-events: none; /* disable click on the checkbox so that the click is handled by the b_menu */
  }

  .burger__menu:has(input:checked)::before {
    rotate: 45deg; /*rotates the top line downwards */
    width: var(--x-width); /*sets the new length of the line when it becomes a cross */
    translate: 0 calc(var(--bar-height) / -2); /*moves the axis slightly up */
  }

  .burger__menu:has(input:checked)::after {
    rotate: -45deg; /* rotates the bottom line upwards */
    width: var(--x-width); /*sets the new length of the line when it becomes a cross */
    translate: 0 calc(var(--bar-height) / 2); /*moves the axis slightly down */
  }

  .burger__menu input:checked { /* removes the middle line */
    opacity: 0;
    width: 0;
  }

  .menu {
    position: absolute;
    top: 67px;
    left: 0;
    flex-direction: column;
    gap: .9rem;
    transform: translateY(-150%); /* Initially hide the menu above the viewport */
    transition: transform var(--animation); /* slides down the mwnu smootlhy */
    opacity: 0;
    transition: opacity var(--animation);  /* opcity transitions in */
    padding-bottom: 1rem;
    background: var(--orange);
  }

  .burger__menu:has(input:checked) + .menu {
    transform: translateY(0); /* resets the setting above (-150%) */
    opacity: 1; /* resets the setting above (0) */
  }

  header:has(.burger__menu input:checked) + main {
    margin-top: 9rem; /* moves the content down to make space for the menu */
  }
}